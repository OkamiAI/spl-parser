{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "SPL",
    "patterns": [
        {
            "include": "#commands"
        },
        {
            "include": "#template_expressions"
        }
    ],
    "repository": {
        "commands": {
            "patterns": [
                {
                    "include": "#commands.abstract"
                },
                {
                    "include": "#commands.accum"
                },
                {
                    "include": "#commands.addcoltotals"
                },
                {
                    "include": "#commands.addinfo"
                },
                {
                    "include": "#commands.addtotals"
                },
                {
                    "include": "#commands.analyzefields"
                },
                {
                    "include": "#commands.anomalies"
                },
                {
                    "include": "#commands.anomalousvalue"
                },
                {
                    "include": "#commands.anomalydetection"
                },
                {
                    "include": "#commands.append"
                },
                {
                    "include": "#commands.appendcols"
                },
                {
                    "include": "#commands.appendpipe"
                },
                {
                    "include": "#commands.arules"
                },
                {
                    "include": "#commands.associate"
                },
                {
                    "include": "#commands.audit"
                },
                {
                    "include": "#commands.autoregress"
                },
                {
                    "include": "#commands.bin"
                },
                {
                    "include": "#commands.bucketdir"
                },
                {
                    "include": "#commands.chart"
                },
                {
                    "include": "#commands.cofilter"
                },
                {
                    "include": "#commands.collapse"
                },
                {
                    "include": "#commands.concurrency"
                },
                {
                    "include": "#commands.contingency"
                },
                {
                    "include": "#commands.convert"
                },
                {
                    "include": "#commands.copyresults"
                },
                {
                    "include": "#commands.correlate"
                },
                {
                    "include": "#commands.createrss"
                },
                {
                    "include": "#commands.datamodel"
                },
                {
                    "include": "#commands.debug"
                },
                {
                    "include": "#commands.dedup"
                },
                {
                    "include": "#commands.delete"
                },
                {
                    "include": "#commands.delta"
                },
                {
                    "include": "#commands.diff"
                },
                {
                    "include": "#commands.dispatch"
                },
                {
                    "include": "#commands.editinfo"
                },
                {
                    "include": "#commands.erex"
                },
                {
                    "include": "#commands.eval"
                },
                {
                    "include": "#commands.extract"
                },
                {
                    "include": "#commands.fieldformat"
                },
                {
                    "include": "#commands.fields"
                },
                {
                    "include": "#commands.fieldsummary"
                },
                {
                    "include": "#commands.file"
                },
                {
                    "include": "#commands.findkeywords"
                },
                {
                    "include": "#commands.filldown"
                },
                {
                    "include": "#commands.fillnull"
                },
                {
                    "include": "#commands.folderize"
                },
                {
                    "include": "#commands.foreach"
                },
                {
                    "include": "#commands.from"
                },
                {
                    "include": "#commands.gauge"
                },
                {
                    "include": "#commands.gentimes"
                },
                {
                    "include": "#commands.geostats"
                },
                {
                    "include": "#commands.geom"
                },
                {
                    "include": "#commands.geomfilter"
                },
                {
                    "include": "#commands.head"
                },
                {
                    "include": "#commands.tail"
                },
                {
                    "include": "#commands.reverse"
                },
                {
                    "include": "#commands.history"
                },
                {
                    "include": "#commands.dbinspect"
                },
                {
                    "include": "#commands.iconify"
                },
                {
                    "include": "#commands.inputcsv"
                },
                {
                    "include": "#commands.inputlookup"
                },
                {
                    "include": "#commands.internalinputcsv"
                },
                {
                    "include": "#commands.join"
                },
                {
                    "include": "#commands.selfjoin"
                },
                {
                    "include": "#commands.kmeans"
                },
                {
                    "include": "#commands.kvform"
                },
                {
                    "include": "#commands.localize"
                },
                {
                    "include": "#commands.localop"
                },
                {
                    "include": "#commands.loadjob"
                },
                {
                    "include": "#commands.lookup"
                },
                {
                    "include": "#commands.makecontinuous"
                },
                {
                    "include": "#commands.makeresults"
                },
                {
                    "include": "#commands.map"
                },
                {
                    "include": "#commands.multikv"
                },
                {
                    "include": "#commands.multisearch"
                },
                {
                    "include": "#commands.mvcombine"
                },
                {
                    "include": "#commands.mvexpand"
                },
                {
                    "include": "#commands.makemv"
                },
                {
                    "include": "#commands.nomv"
                },
                {
                    "include": "#commands.newseriesfilter"
                },
                {
                    "include": "#commands.nokv"
                },
                {
                    "include": "#commands.outlier"
                },
                {
                    "include": "#commands.dump"
                },
                {
                    "include": "#commands.outputcsv"
                },
                {
                    "include": "#commands.outputlookup"
                },
                {
                    "include": "#commands.outputraw"
                },
                {
                    "include": "#commands.outputrawr"
                },
                {
                    "include": "#commands.outputtext"
                },
                {
                    "include": "#commands.overlap"
                },
                {
                    "include": "#commands.pivot"
                },
                {
                    "include": "#commands.predict"
                },
                {
                    "include": "#commands.preview"
                },
                {
                    "include": "#commands.rare"
                },
                {
                    "include": "#commands.redistribute"
                },
                {
                    "include": "#commands.regex"
                },
                {
                    "include": "#commands.relevancy"
                },
                {
                    "include": "#commands.rename"
                },
                {
                    "include": "#commands.replace"
                },
                {
                    "include": "#commands.rex"
                },
                {
                    "include": "#commands.rtorder"
                },
                {
                    "include": "#commands.select"
                },
                {
                    "include": "#commands.script"
                },
                {
                    "include": "#commands.savedsearch"
                },
                {
                    "include": "#commands.sendalert"
                },
                {
                    "include": "#commands.sendemail"
                },
                {
                    "include": "#commands.setfields"
                },
                {
                    "include": "#commands.spath"
                },
                {
                    "include": "#commands.table"
                },
                {
                    "include": "#commands.transpose"
                },
                {
                    "include": "#commands.uniq"
                },
                {
                    "include": "#commands.metasearch"
                },
                {
                    "include": "#commands.search"
                },
                {
                    "include": "#commands.set"
                },
                {
                    "include": "#commands.cluster"
                },
                {
                    "include": "#commands.shape"
                },
                {
                    "include": "#commands.showargs"
                },
                {
                    "include": "#commands.sort"
                },
                {
                    "include": "#commands.collect"
                },
                {
                    "include": "#commands.mcatalog"
                },
                {
                    "include": "#commands.mcollect"
                },
                {
                    "include": "#commands.meventcollect"
                },
                {
                    "include": "#commands.mrollup"
                },
                {
                    "include": "#commands.streamstats"
                },
                {
                    "include": "#commands.eventstats"
                },
                {
                    "include": "#commands.stats"
                },
                {
                    "include": "#commands.strcat"
                },
                {
                    "include": "#commands.streamedcsv"
                },
                {
                    "include": "#commands.sistats"
                },
                {
                    "include": "#commands.sitop"
                },
                {
                    "include": "#commands.sirare"
                },
                {
                    "include": "#commands.sichart"
                },
                {
                    "include": "#commands.sitimechart"
                },
                {
                    "include": "#commands.tags"
                },
                {
                    "include": "#commands.tagcreate"
                },
                {
                    "include": "#commands.tagdelete"
                },
                {
                    "include": "#commands.tagset"
                },
                {
                    "include": "#commands.trendline"
                },
                {
                    "include": "#commands.timechart"
                },
                {
                    "include": "#commands.timewrap"
                },
                {
                    "include": "#commands.top"
                },
                {
                    "include": "#commands.tscollect"
                },
                {
                    "include": "#commands.mstats"
                },
                {
                    "include": "#commands.tstats"
                },
                {
                    "include": "#commands.transaction"
                },
                {
                    "include": "#commands.typeahead"
                },
                {
                    "include": "#commands.typelearner"
                },
                {
                    "include": "#commands.typer"
                },
                {
                    "include": "#commands.where"
                },
                {
                    "include": "#commands.highlight"
                },
                {
                    "include": "#commands.xyseries"
                },
                {
                    "include": "#commands.untable"
                },
                {
                    "include": "#commands.rest"
                },
                {
                    "include": "#commands.surrounding"
                },
                {
                    "include": "#commands.xmlkv"
                },
                {
                    "include": "#commands.xmlunescape"
                },
                {
                    "include": "#commands.xpath"
                },
                {
                    "include": "#commands.iplocation"
                },
                {
                    "include": "#commands.rangemap"
                },
                {
                    "include": "#commands.rawstats"
                },
                {
                    "include": "#commands.reltime"
                },
                {
                    "include": "#commands.scrub"
                },
                {
                    "include": "#commands.metadata"
                },
                {
                    "include": "#commands.eventcount"
                },
                {
                    "include": "#commands.findtypes"
                },
                {
                    "include": "#commands.return"
                },
                {
                    "include": "#commands.runshellscript"
                },
                {
                    "include": "#commands.searchtxn"
                },
                {
                    "include": "#commands.walklex"
                },
                {
                    "include": "#commands.msearch"
                },
                {
                    "include": "#commands.x11"
                },
                {
                    "include": "#commands.union"
                },
                {
                    "include": "#commands.dfsjob"
                },
                {
                    "include": "#commands.jsontxn"
                }
            ]
        },
        "template_expressions": {
            "patterns": [
                {
                    "name": "variable.other.template-expression.spl",
                    "match": "\\$\\{[^}]+\\}"
                }
            ]
        },
        "commands.abstract": {
            "begin": "(?<=\\[|\\|)\\s+(abstract|excerpt)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.abstract"
                }
            ]
        },
        "arguments.abstract": {
            "patterns": [
                {
                    "match": "(maxlines|maxterms)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.accum": {
            "begin": "(?<=\\[|\\|)\\s+(accum)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#operators.accum"
                }
            ]
        },
        "operators.accum": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS)\\b"
        },
        "commands.addcoltotals": {
            "begin": "(?<=\\[|\\|)\\s+(addcoltotals)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.addcoltotals"
                }
            ]
        },
        "arguments.addcoltotals": {
            "patterns": [
                {
                    "match": "(labelfield|label)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.addinfo": {
            "begin": "(?<=\\[|\\|)\\s+(addinfo)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.addtotals": {
            "begin": "(?<=\\[|\\|)\\s+(addtotals)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.addtotals"
                }
            ]
        },
        "arguments.addtotals": {
            "patterns": [
                {
                    "match": "(fieldname|col|labelfield|row|label)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.analyzefields": {
            "begin": "(?<=\\[|\\|)\\s+(analyzefields|af)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.analyzefields"
                }
            ]
        },
        "arguments.analyzefields": {
            "patterns": [
                {
                    "match": "(classfield)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.anomalies": {
            "begin": "(?<=\\[|\\|)\\s+(anomalies)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.anomalies"
                }
            ]
        },
        "arguments.anomalies": {
            "patterns": [
                {
                    "match": "(blacklistthreshold|blacklist|maxvalues|labelonly|threshold|field|normalize)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.anomalousvalue": {
            "begin": "(?<=\\[|\\|)\\s+(anomalousvalue)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.anomalousvalue"
                },
                {
                    "include": "#functions.anomalousvalue"
                },
                {
                    "include": "#operators.anomalousvalue"
                }
            ]
        },
        "arguments.anomalousvalue": {
            "patterns": [
                {
                    "match": "(minsupcount|action|pthresh|maxanofreq|minnormfreq|minsupfreq)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.anomalousvalue": {
            "match": "\\b(filter|annotate|summary)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.anomalousvalue": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SUMMARY|ANNOTATE|FILTER)\\b"
        },
        "commands.anomalydetection": {
            "begin": "(?<=\\[|\\|)\\s+(anomalydetection)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.anomalydetection"
                },
                {
                    "include": "#functions.anomalydetection"
                },
                {
                    "include": "#operators.anomalydetection"
                }
            ]
        },
        "arguments.anomalydetection": {
            "patterns": [
                {
                    "match": "(cutoff|method|action|pthresh)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.anomalydetection": {
            "match": "\\b(rm|annotate|histogram|tf|zscore|remove|iqr|summary|filter|transform)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.anomalydetection": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(ANNOTATE|RM|FILTER|SUMMARY|TRANSFORM|TF|ZSCORE|HISTOGRAM|REMOVE|IQR)\\b"
        },
        "commands.append": {
            "begin": "(?<=\\[|\\|)\\s+(append)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.append"
                }
            ]
        },
        "arguments.append": {
            "patterns": [
                {
                    "match": "(maxout|extendtimerange|timeout|maxtime)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.appendcols": {
            "begin": "(?<=\\[|\\|)\\s+(appendcols)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.appendcols"
                }
            ]
        },
        "arguments.appendcols": {
            "patterns": [
                {
                    "match": "(timeout|extendtimerange|maxout|override|maxtime)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.appendpipe": {
            "begin": "(?<=\\[|\\|)\\s+(appendpipe)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.appendpipe"
                }
            ]
        },
        "arguments.appendpipe": {
            "patterns": [
                {
                    "match": "(run_in_preview)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.arules": {
            "begin": "(?<=\\[|\\|)\\s+(arules)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.arules"
                }
            ]
        },
        "arguments.arules": {
            "patterns": [
                {
                    "match": "(conf|sup)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.associate": {
            "begin": "(?<=\\[|\\|)\\s+(associate)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.associate"
                }
            ]
        },
        "arguments.associate": {
            "patterns": [
                {
                    "match": "(supfreq|supcnt|improv)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.audit": {
            "begin": "(?<=\\[|\\|)\\s+(audit)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.autoregress": {
            "begin": "(?<=\\[|\\|)\\s+(autoregress|ar)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.autoregress"
                },
                {
                    "include": "#operators.autoregress"
                }
            ]
        },
        "arguments.autoregress": {
            "patterns": [
                {
                    "match": "(p)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "operators.autoregress": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS)\\b"
        },
        "commands.bin": {
            "begin": "(?<=\\[|\\|)\\s+(bin|bucket|discretize)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.bin"
                },
                {
                    "include": "#functions.bin"
                },
                {
                    "include": "#operators.bin"
                }
            ]
        },
        "arguments.bin": {
            "patterns": [
                {
                    "match": "(aligntime|end|start|bins|span|minspan)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.bin": {
            "match": "\\b(latest|week|earliest|year|sec|as|log|min|day|quarter|hr|month)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.bin": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SEC|AS|EARLIEST|LOG|MIN|WEEK|HR|MONTH|DAY|LATEST|YEAR|QUARTER)\\b"
        },
        "commands.bucketdir": {
            "begin": "(?<=\\[|\\|)\\s+(bucketdir)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.bucketdir"
                }
            ]
        },
        "arguments.bucketdir": {
            "patterns": [
                {
                    "match": "(sep|countfield|sizefield|maxcount|pathfield)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.chart": {
            "begin": "(?<=\\[|\\|)\\s+(chart)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.chart"
                },
                {
                    "include": "#functions.chart"
                },
                {
                    "include": "#operators.chart"
                }
            ]
        },
        "arguments.chart": {
            "patterns": [
                {
                    "match": "(sep|format|dedup_splitvals|nullstr|cont|limit|useother|aligntime|end|usenull|otherstr|start|agg|bins|span|minspan)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.chart": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|notin|max|min|day|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|quarter|mvrange|mvmap|ceil|exactperc|week|upperperc|avg|exp|nullif|split|hr|varp|top|month|pi|ltrim|searchmatch|asin|hypot|bottom|sum|earliest|year|stdevp|null|sinh|false|acos|latest|ln|rtrim|mvfilter|like|md5|sec|strftime|len|sqrt|sparkline|typeof|coalesce|ifnull|isbool|sumsq|commands|cidrmatch|case|ceiling|sha512|as|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|in|range|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.chart": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|EARLIEST|MVRANGE|HYPOT|SEARCHMATCH|SHA512|MIN|MVMAP|VALIDATE|URLDECODE|IN|ACOS|LEN|RANGE|DAY|TAN|ISNULL|SPARKLINE|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|MEAN|C|AND|SHA1|SUMSQ|ATAN|COALESCE|RTRIM|BY|BOTTOM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|LATEST|ABS|SUM|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|MONTH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|SEC|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|ISBOOL|MVCOUNT|OVER|OR|FALSE|TYPEOF|EXACTPERC|SINH|STDEV|TOP|ISINT|MVJOIN|AS|ROUND|SIN|NOTIN|NOT|SPLIT|WEEK|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|HR|TOSTRING|YEAR|QUARTER)\\b"
        },
        "commands.cofilter": {
            "begin": "(?<=\\[|\\|)\\s+(cofilter)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.cofilter"
                },
                {
                    "include": "#operators.cofilter"
                }
            ]
        },
        "functions.cofilter": {
            "match": "\\b(field2|field1)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.cofilter": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(FIELD2|FIELD1)\\b"
        },
        "commands.collapse": {
            "begin": "(?<=\\[|\\|)\\s+(collapse)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.collapse"
                }
            ]
        },
        "arguments.collapse": {
            "patterns": [
                {
                    "match": "(force|chunksize)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.concurrency": {
            "begin": "(?<=\\[|\\|)\\s+(concurrency)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.concurrency"
                }
            ]
        },
        "arguments.concurrency": {
            "patterns": [
                {
                    "match": "(output|start|duration)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.contingency": {
            "begin": "(?<=\\[|\\|)\\s+(contingency|counttable|ctable)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.contingency"
                }
            ]
        },
        "arguments.contingency": {
            "patterns": [
                {
                    "match": "(maxrows|maxcols|usetotal|totalstr|minrowcover|mincolcover)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.convert": {
            "begin": "(?<=\\[|\\|)\\s+(convert)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.convert"
                },
                {
                    "include": "#functions.convert"
                },
                {
                    "include": "#operators.convert"
                }
            ]
        },
        "arguments.convert": {
            "patterns": [
                {
                    "match": "(timeformat)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.convert": {
            "match": "\\b(as)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.convert": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS)\\b"
        },
        "commands.copyresults": {
            "begin": "(?<=\\[|\\|)\\s+(copyresults)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.copyresults"
                }
            ]
        },
        "arguments.copyresults": {
            "patterns": [
                {
                    "match": "(dest|sid)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.correlate": {
            "begin": "(?<=\\[|\\|)\\s+(correlate)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.createrss": {
            "begin": "(?<=\\[|\\|)\\s+(createrss)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.createrss"
                }
            ]
        },
        "arguments.createrss": {
            "patterns": [
                {
                    "match": "(link|path|descr|count|graceful|name)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.datamodel": {
            "begin": "(?<=\\[|\\|)\\s+(datamodel)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.datamodel"
                },
                {
                    "include": "#functions.datamodel"
                },
                {
                    "include": "#operators.datamodel"
                }
            ]
        },
        "arguments.datamodel": {
            "patterns": [
                {
                    "match": "(summariesonly|strict_fields|allow_old_summaries)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.datamodel": {
            "match": "\\b(acceleration_search_string|flat|search_string|search|acceleration_search|flat_string)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.datamodel": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(ACCELERATION_SEARCH_STRING|SEARCH_STRING|FLAT_STRING|FLAT|SEARCH|ACCELERATION_SEARCH)\\b"
        },
        "commands.debug": {
            "begin": "(?<=\\[|\\|)\\s+(debug)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.debug"
                },
                {
                    "include": "#functions.debug"
                },
                {
                    "include": "#operators.debug"
                }
            ]
        },
        "arguments.debug": {
            "patterns": [
                {
                    "match": "(cmd|param1|param2)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.debug": {
            "match": "\\b(logchange|rescan|sync|sleep|roll|validate|delete|optimize)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.debug": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(ROLL|SLEEP|LOGCHANGE|RESCAN|VALIDATE|SYNC|OPTIMIZE|DELETE)\\b"
        },
        "commands.dedup": {
            "begin": "(?<=\\[|\\|)\\s+(dedup)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.dedup"
                },
                {
                    "include": "#functions.dedup"
                },
                {
                    "include": "#operators.dedup"
                }
            ]
        },
        "arguments.dedup": {
            "patterns": [
                {
                    "match": "(consecutive|keepevents|keepempty)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.dedup": {
            "match": "\\b(str|sortby|ip|auto|num)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.dedup": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(NUM|SORTBY|STR|IP|AUTO)\\b"
        },
        "commands.delete": {
            "begin": "(?<=\\[|\\|)\\s+(delete)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.delta": {
            "begin": "(?<=\\[|\\|)\\s+(delta)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.delta"
                },
                {
                    "include": "#functions.delta"
                },
                {
                    "include": "#operators.delta"
                }
            ]
        },
        "arguments.delta": {
            "patterns": [
                {
                    "match": "(p)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.delta": {
            "match": "\\b(as)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.delta": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS)\\b"
        },
        "commands.diff": {
            "begin": "(?<=\\[|\\|)\\s+(diff)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.diff"
                }
            ]
        },
        "arguments.diff": {
            "patterns": [
                {
                    "match": "(context|position1|attribute|position2|diffheader|maxlen)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.dispatch": {
            "begin": "(?<=\\[|\\|)\\s+(dispatch)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.dispatch"
                }
            ]
        },
        "arguments.dispatch": {
            "patterns": [
                {
                    "match": "(id|start_time|end_time|label|maxresults|ttl|spawn_process|maxtime)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.editinfo": {
            "begin": "(?<=\\[|\\|)\\s+(editinfo)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.editinfo"
                }
            ]
        },
        "arguments.editinfo": {
            "patterns": [
                {
                    "match": "(msg_debug|keyset|msg_warn|msg_error|starttime|endtime|msg_info)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.erex": {
            "begin": "(?<=\\[|\\|)\\s+(erex)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.erex"
                }
            ]
        },
        "arguments.erex": {
            "patterns": [
                {
                    "match": "(fromfield|counterexamples|examples|maxtrainers)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.eval": {
            "begin": "(?<=\\[|\\|)\\s+(eval)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.eval"
                },
                {
                    "include": "#operators.eval"
                }
            ]
        },
        "functions.eval": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|max|min|relative_time|validate|random|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|log|abs|tanh|sin|sigfig|mvrange|mvmap|ceil|exp|nullif|split|pi|ltrim|searchmatch|asin|hypot|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|sha512|atan|match|isstr|urldecode|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|exact|true|asinh|mvdedup|round|spath|strptime|isnum|isnull|now|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.eval": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|ASINH|HYPOT|XOR|MVRANGE|SEARCHMATCH|SHA512|MVMAP|VALIDATE|MIN|URLDECODE|ACOS|LEN|TAN|ISNULL|MVFILTER|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|SHA1|ATAN|COALESCE|RTRIM|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|COMMANDS|NULL|CASE|IF|ACOSH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|NOW|MVAPPEND|ISBOOL|MVCOUNT|FALSE|OR|TYPEOF|SINH|ISINT|MVJOIN|ROUND|SIN|NOT|SPLIT|MAX|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|MVSORT|TANH|ATAN2|LTRIM|TOSTRING)\\b"
        },
        "commands.extract": {
            "begin": "(?<=\\[|\\|)\\s+(extract|kv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.extract"
                }
            ]
        },
        "arguments.extract": {
            "patterns": [
                {
                    "match": "(mv_add|maxchars|clean_keys|kvdelim|limit|reload|segment|pairdelim)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.fieldformat": {
            "begin": "(?<=\\[|\\|)\\s+(fieldformat)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.fieldformat"
                },
                {
                    "include": "#operators.fieldformat"
                }
            ]
        },
        "functions.fieldformat": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|max|min|relative_time|validate|random|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|log|abs|tanh|sin|sigfig|mvrange|mvmap|ceil|exp|nullif|split|pi|ltrim|searchmatch|asin|hypot|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|sha512|atan|match|isstr|urldecode|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|exact|true|asinh|mvdedup|round|spath|strptime|isnum|isnull|now|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.fieldformat": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|ASINH|HYPOT|XOR|MVRANGE|SEARCHMATCH|SHA512|MVMAP|VALIDATE|MIN|URLDECODE|ACOS|LEN|TAN|ISNULL|MVFILTER|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|SHA1|ATAN|COALESCE|RTRIM|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|COMMANDS|NULL|CASE|IF|ACOSH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|NOW|MVAPPEND|ISBOOL|MVCOUNT|FALSE|OR|TYPEOF|SINH|ISINT|MVJOIN|ROUND|SIN|NOT|SPLIT|MAX|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|MVSORT|TANH|ATAN2|LTRIM|TOSTRING)\\b"
        },
        "commands.fields": {
            "begin": "(?<=\\[|\\|)\\s+(fields)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.fieldsummary": {
            "begin": "(?<=\\[|\\|)\\s+(fieldsummary)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.fieldsummary"
                }
            ]
        },
        "arguments.fieldsummary": {
            "patterns": [
                {
                    "match": "(maxvals)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.file": {
            "begin": "(?<=\\[|\\|)\\s+(file|test)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.findkeywords": {
            "begin": "(?<=\\[|\\|)\\s+(findkeywords)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.findkeywords"
                }
            ]
        },
        "arguments.findkeywords": {
            "patterns": [
                {
                    "match": "(labelfield|dedup)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.filldown": {
            "begin": "(?<=\\[|\\|)\\s+(filldown)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.fillnull": {
            "begin": "(?<=\\[|\\|)\\s+(fillnull)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.fillnull"
                }
            ]
        },
        "arguments.fillnull": {
            "patterns": [
                {
                    "match": "(value)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.folderize": {
            "begin": "(?<=\\[|\\|)\\s+(folderize)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.folderize"
                }
            ]
        },
        "arguments.folderize": {
            "patterns": [
                {
                    "match": "(sep|attr|minfolders|size|maxfolders)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.foreach": {
            "begin": "(?<=\\[|\\|)\\s+(foreach)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.foreach"
                }
            ]
        },
        "arguments.foreach": {
            "patterns": [
                {
                    "match": "(matchstr|fieldstr|matchseg2|matchseg3|matchseg1)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.from": {
            "begin": "(?<=\\[|\\|)\\s+(from)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.from"
                },
                {
                    "include": "#operators.from"
                }
            ]
        },
        "functions.from": {
            "match": "\\b(datamodel|federated|inputlookup|savedsearch)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.from": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(FEDERATED|INPUTLOOKUP|DATAMODEL|SAVEDSEARCH)\\b"
        },
        "commands.gauge": {
            "begin": "(?<=\\[|\\|)\\s+(gauge)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.gentimes": {
            "begin": "(?<=\\[|\\|)\\s+(gentimes)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.gentimes"
                },
                {
                    "include": "#functions.gentimes"
                },
                {
                    "include": "#operators.gentimes"
                }
            ]
        },
        "arguments.gentimes": {
            "patterns": [
                {
                    "match": "(increment|end|start)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.gentimes": {
            "match": "\\b(d|m|h|s)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.gentimes": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(D|S|H|M)\\b"
        },
        "commands.geostats": {
            "begin": "(?<=\\[|\\|)\\s+(geostats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.geostats"
                },
                {
                    "include": "#functions.geostats"
                },
                {
                    "include": "#operators.geostats"
                }
            ]
        },
        "arguments.geostats": {
            "patterns": [
                {
                    "match": "(longfield|outputlongfield|locallimit|maxzoomlevel|outputlatfield|binspanlat|binspanlong|globallimit|translatetoxy|latfield)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.geostats": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|max|min|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|mvrange|mvmap|ceil|exactperc|upperperc|avg|exp|nullif|split|varp|pi|ltrim|searchmatch|asin|hypot|stdevp|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|sha512|as|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.geostats": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|HYPOT|MVRANGE|SEARCHMATCH|SHA512|MVMAP|VALIDATE|MIN|URLDECODE|ACOS|LEN|TAN|ISNULL|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|C|MEAN|SHA1|ATAN|COALESCE|RTRIM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|ISBOOL|MVCOUNT|OR|FALSE|TYPEOF|EXACTPERC|SINH|STDEV|ISINT|MVJOIN|AS|ROUND|SIN|NOT|SPLIT|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|TOSTRING)\\b"
        },
        "commands.geom": {
            "begin": "(?<=\\[|\\|)\\s+(geom)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.geom"
                }
            ]
        },
        "arguments.geom": {
            "patterns": [
                {
                    "match": "(min_x|gen|min_y|max_x|max_y|featureIdField|allFeatures)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.geomfilter": {
            "begin": "(?<=\\[|\\|)\\s+(geomfilter)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.geomfilter"
                }
            ]
        },
        "arguments.geomfilter": {
            "patterns": [
                {
                    "match": "(min_x|min_y|max_x|max_y)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.head": {
            "begin": "(?<=\\[|\\|)\\s+(head)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.head"
                },
                {
                    "include": "#functions.head"
                },
                {
                    "include": "#operators.head"
                }
            ]
        },
        "arguments.head": {
            "patterns": [
                {
                    "match": "(null|limit|keeplast)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.head": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|max|min|relative_time|validate|random|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|log|abs|tanh|sin|sigfig|mvrange|mvmap|ceil|exp|nullif|split|pi|ltrim|searchmatch|asin|hypot|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|sha512|atan|match|isstr|urldecode|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|exact|true|asinh|mvdedup|round|spath|strptime|isnum|isnull|now|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.head": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|ASINH|HYPOT|XOR|MVRANGE|SEARCHMATCH|SHA512|MVMAP|VALIDATE|MIN|URLDECODE|ACOS|LEN|TAN|ISNULL|MVFILTER|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|SHA1|ATAN|COALESCE|RTRIM|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|COMMANDS|NULL|CASE|IF|ACOSH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|NOW|MVAPPEND|ISBOOL|MVCOUNT|FALSE|OR|TYPEOF|SINH|ISINT|MVJOIN|ROUND|SIN|NOT|SPLIT|MAX|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|MVSORT|TANH|ATAN2|LTRIM|TOSTRING)\\b"
        },
        "commands.tail": {
            "begin": "(?<=\\[|\\|)\\s+(tail)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.reverse": {
            "begin": "(?<=\\[|\\|)\\s+(reverse)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.history": {
            "begin": "(?<=\\[|\\|)\\s+(history)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.history"
                }
            ]
        },
        "arguments.history": {
            "patterns": [
                {
                    "match": "(events)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.dbinspect": {
            "begin": "(?<=\\[|\\|)\\s+(dbinspect)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.dbinspect"
                },
                {
                    "include": "#functions.dbinspect"
                },
                {
                    "include": "#operators.dbinspect"
                }
            ]
        },
        "arguments.dbinspect": {
            "patterns": [
                {
                    "match": "(index|span|timeformat|corruptonly)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.dbinspect": {
            "match": "\\b(week|year|sec|log|min|day|quarter|hr|month)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.dbinspect": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SEC|LOG|MIN|WEEK|HR|MONTH|DAY|YEAR|QUARTER)\\b"
        },
        "commands.iconify": {
            "begin": "(?<=\\[|\\|)\\s+(iconify)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.inputcsv": {
            "begin": "(?<=\\[|\\|)\\s+(inputcsv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.inputcsv"
                },
                {
                    "include": "#operators.inputcsv"
                }
            ]
        },
        "arguments.inputcsv": {
            "patterns": [
                {
                    "match": "(events|dispatch|start|append|max)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "operators.inputcsv": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(WHERE)\\b"
        },
        "commands.inputlookup": {
            "begin": "(?<=\\[|\\|)\\s+(inputlookup)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.inputlookup"
                },
                {
                    "include": "#functions.inputlookup"
                },
                {
                    "include": "#operators.inputlookup"
                }
            ]
        },
        "arguments.inputlookup": {
            "patterns": [
                {
                    "match": "(append|start|max)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.inputlookup": {
            "match": "\\b(where)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.inputlookup": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(WHERE)\\b"
        },
        "commands.internalinputcsv": {
            "begin": "(?<=\\[|\\|)\\s+(internalinputcsv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.join": {
            "begin": "(?<=\\[|\\|)\\s+(join)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.join"
                },
                {
                    "include": "#functions.join"
                },
                {
                    "include": "#operators.join"
                }
            ]
        },
        "arguments.join": {
            "patterns": [
                {
                    "match": "(earlier|type|right|left|usetime|overwrite|max)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.join": {
            "match": "\\b(inner|datamodel|savedsearch|left|outer|federated|inputlookup)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.join": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(INNER|LEFT|SAVEDSEARCH|FEDERATED|INPUTLOOKUP|OUTER|WHERE|DATAMODEL)\\b"
        },
        "commands.selfjoin": {
            "begin": "(?<=\\[|\\|)\\s+(selfjoin)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.selfjoin"
                }
            ]
        },
        "arguments.selfjoin": {
            "patterns": [
                {
                    "match": "(overwrite|max|keepsingle)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.kmeans": {
            "begin": "(?<=\\[|\\|)\\s+(kmeans)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.kmeans"
                },
                {
                    "include": "#functions.kmeans"
                },
                {
                    "include": "#operators.kmeans"
                }
            ]
        },
        "arguments.kmeans": {
            "patterns": [
                {
                    "match": "(cfield|reps|t|k|showcentroid|dt|maxiters)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.kmeans": {
            "match": "\\b(cos|sq|l1|l2|l1norm|cosine|l2norm|cityblock|sqeuclidean|cb)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.kmeans": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(COS|L1NORM|SQEUCLIDEAN|L2|CITYBLOCK|SQ|COSINE|CB|L2NORM|L1)\\b"
        },
        "commands.kvform": {
            "begin": "(?<=\\[|\\|)\\s+(kvform)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.kvform"
                }
            ]
        },
        "arguments.kvform": {
            "patterns": [
                {
                    "match": "(form|field)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.localize": {
            "begin": "(?<=\\[|\\|)\\s+(localize)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.localize"
                },
                {
                    "include": "#functions.localize"
                },
                {
                    "include": "#operators.localize"
                }
            ]
        },
        "arguments.localize": {
            "patterns": [
                {
                    "match": "(timebefore|timeafter|maxpause)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.localize": {
            "match": "\\b(s|d|m|h)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.localize": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(S|D|H|M)\\b"
        },
        "commands.localop": {
            "begin": "(?<=\\[|\\|)\\s+(localop)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.loadjob": {
            "begin": "(?<=\\[|\\|)\\s+(loadjob)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.loadjob"
                }
            ]
        },
        "arguments.loadjob": {
            "patterns": [
                {
                    "match": "(events|job_delegate|ignore_running|savedsearch|artifact_offset)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.lookup": {
            "begin": "(?<=\\[|\\|)\\s+(lookup)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.lookup"
                },
                {
                    "include": "#functions.lookup"
                },
                {
                    "include": "#operators.lookup"
                }
            ]
        },
        "arguments.lookup": {
            "patterns": [
                {
                    "match": "(local|update|event_time_field)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.lookup": {
            "match": "\\b(as)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.lookup": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS|OUTPUT|OUTPUTNEW)\\b"
        },
        "commands.makecontinuous": {
            "begin": "(?<=\\[|\\|)\\s+(makecontinuous)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.makecontinuous"
                },
                {
                    "include": "#functions.makecontinuous"
                },
                {
                    "include": "#operators.makecontinuous"
                }
            ]
        },
        "arguments.makecontinuous": {
            "patterns": [
                {
                    "match": "(aligntime|end|start|bins|span|minspan)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.makecontinuous": {
            "match": "\\b(latest|week|earliest|year|sec|log|min|day|quarter|hr|month)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.makecontinuous": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SEC|EARLIEST|LOG|MIN|WEEK|HR|MONTH|DAY|LATEST|YEAR|QUARTER)\\b"
        },
        "commands.makeresults": {
            "begin": "(?<=\\[|\\|)\\s+(makeresults)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.makeresults"
                }
            ]
        },
        "arguments.makeresults": {
            "patterns": [
                {
                    "match": "(splunk_server_group|annotate|count|splunk_server)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.map": {
            "begin": "(?<=\\[|\\|)\\s+(map)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.map"
                }
            ]
        },
        "arguments.map": {
            "patterns": [
                {
                    "match": "(search|maxsearches)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.multikv": {
            "begin": "(?<=\\[|\\|)\\s+(multikv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.multikv"
                }
            ]
        },
        "arguments.multikv": {
            "patterns": [
                {
                    "match": "(conf|noheader|rmorig|multitable|forceheader|copyattrs)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.multisearch": {
            "begin": "(?<=\\[|\\|)\\s+(multisearch)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.mvcombine": {
            "begin": "(?<=\\[|\\|)\\s+(mvcombine)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.mvcombine"
                }
            ]
        },
        "arguments.mvcombine": {
            "patterns": [
                {
                    "match": "(delim)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.mvexpand": {
            "begin": "(?<=\\[|\\|)\\s+(mvexpand)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.mvexpand"
                }
            ]
        },
        "arguments.mvexpand": {
            "patterns": [
                {
                    "match": "(limit)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.makemv": {
            "begin": "(?<=\\[|\\|)\\s+(makemv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.makemv"
                }
            ]
        },
        "arguments.makemv": {
            "patterns": [
                {
                    "match": "(allowempty|tokenizer|delim|setsv)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.nomv": {
            "begin": "(?<=\\[|\\|)\\s+(nomv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.newseriesfilter": {
            "begin": "(?<=\\[|\\|)\\s+(newseriesfilter)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.nokv": {
            "begin": "(?<=\\[|\\|)\\s+(nokv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.outlier": {
            "begin": "(?<=\\[|\\|)\\s+(outlier|outlierfilter)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.outlier"
                },
                {
                    "include": "#functions.outlier"
                },
                {
                    "include": "#operators.outlier"
                }
            ]
        },
        "arguments.outlier": {
            "patterns": [
                {
                    "match": "(mark|uselower|action|param)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.outlier": {
            "match": "\\b(remove|tf|transform|rm)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.outlier": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(REMOVE|TF|RM|TRANSFORM)\\b"
        },
        "commands.dump": {
            "begin": "(?<=\\[|\\|)\\s+(dump)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.dump"
                }
            ]
        },
        "arguments.dump": {
            "patterns": [
                {
                    "match": "(compress|format|fields|basefilename|rollsize)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.outputcsv": {
            "begin": "(?<=\\[|\\|)\\s+(outputcsv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.outputcsv"
                }
            ]
        },
        "arguments.outputcsv": {
            "patterns": [
                {
                    "match": "(create_empty|usexml|dispatch|singlefile|override_if_empty|append)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.outputlookup": {
            "begin": "(?<=\\[|\\|)\\s+(outputlookup)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.outputlookup"
                }
            ]
        },
        "arguments.outputlookup": {
            "patterns": [
                {
                    "match": "(create_empty|key_field|override_if_empty|output_format|append|max|createinapp)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.outputraw": {
            "begin": "(?<=\\[|\\|)\\s+(outputraw)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.outputrawr": {
            "begin": "(?<=\\[|\\|)\\s+(outputrawr)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.outputtext": {
            "begin": "(?<=\\[|\\|)\\s+(outputtext)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.outputtext"
                }
            ]
        },
        "arguments.outputtext": {
            "patterns": [
                {
                    "match": "(usexml)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.overlap": {
            "begin": "(?<=\\[|\\|)\\s+(overlap)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.pivot": {
            "begin": "(?<=\\[|\\|)\\s+(pivot)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.predict": {
            "begin": "(?<=\\[|\\|)\\s+(predict)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.predict"
                },
                {
                    "include": "#operators.predict"
                }
            ]
        },
        "arguments.predict": {
            "patterns": [
                {
                    "match": "(period|future_timespan|algorithm|suppress|holdback|correlate)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "operators.predict": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(LLP|LLT|BILL|LLP5|LLB|LL)\\b"
        },
        "commands.preview": {
            "begin": "(?<=\\[|\\|)\\s+(preview)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.rare": {
            "begin": "(?<=\\[|\\|)\\s+(rare)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.rare"
                }
            ]
        },
        "arguments.rare": {
            "patterns": [
                {
                    "match": "(countfield|showcount|otherstr|showperc|percentfield|limit|useother)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.redistribute": {
            "begin": "(?<=\\[|\\|)\\s+(redistribute)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.redistribute"
                },
                {
                    "include": "#functions.redistribute"
                },
                {
                    "include": "#operators.redistribute"
                }
            ]
        },
        "arguments.redistribute": {
            "patterns": [
                {
                    "match": "(dfs|num_of_reducers)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.redistribute": {
            "match": "\\b(true)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.redistribute": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(TRUE)\\b"
        },
        "commands.regex": {
            "begin": "(?<=\\[|\\|)\\s+(regex)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.relevancy": {
            "begin": "(?<=\\[|\\|)\\s+(relevancy)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.rename": {
            "begin": "(?<=\\[|\\|)\\s+(rename)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.rename"
                },
                {
                    "include": "#operators.rename"
                }
            ]
        },
        "functions.rename": {
            "match": "\\b(as)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.rename": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS)\\b"
        },
        "commands.replace": {
            "begin": "(?<=\\[|\\|)\\s+(replace)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.replace"
                },
                {
                    "include": "#operators.replace"
                }
            ]
        },
        "functions.replace": {
            "match": "\\b(with|in)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.replace": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(IN|WITH)\\b"
        },
        "commands.rex": {
            "begin": "(?<=\\[|\\|)\\s+(rex)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.rex"
                },
                {
                    "include": "#functions.rex"
                },
                {
                    "include": "#operators.rex"
                }
            ]
        },
        "arguments.rex": {
            "patterns": [
                {
                    "match": "(offset_field|max_match|field|mode)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.rex": {
            "match": "\\b(sed)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.rex": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SED)\\b"
        },
        "commands.rtorder": {
            "begin": "(?<=\\[|\\|)\\s+(rtorder)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.rtorder"
                },
                {
                    "include": "#functions.rtorder"
                },
                {
                    "include": "#operators.rtorder"
                }
            ]
        },
        "arguments.rtorder": {
            "patterns": [
                {
                    "match": "(buffer_span|max_buffer_size|discard)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.rtorder": {
            "match": "\\b(week|year|sec|min|day|quarter|hr|month)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.rtorder": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SEC|MIN|WEEK|HR|MONTH|DAY|YEAR|QUARTER)\\b"
        },
        "commands.select": {
            "begin": "(?<=\\[|\\|)\\s+(select|report)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.script": {
            "begin": "(?<=\\[|\\|)\\s+(script|run)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.script"
                }
            ]
        },
        "arguments.script": {
            "patterns": [
                {
                    "match": "(maxinputs)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.savedsearch": {
            "begin": "(?<=\\[|\\|)\\s+(savedsearch|macro|savedsplunk)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.savedsearch"
                }
            ]
        },
        "arguments.savedsearch": {
            "patterns": [
                {
                    "match": "(nosubstitution)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.sendalert": {
            "begin": "(?<=\\[|\\|)\\s+(sendalert)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.sendalert"
                },
                {
                    "include": "#functions.sendalert"
                },
                {
                    "include": "#operators.sendalert"
                }
            ]
        },
        "arguments.sendalert": {
            "patterns": [
                {
                    "match": "(results_link|results_path)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.sendalert": {
            "match": "\\b(param)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.sendalert": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(PARAM)\\b"
        },
        "commands.sendemail": {
            "begin": "(?<=\\[|\\|)\\s+(sendemail)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.sendemail"
                },
                {
                    "include": "#functions.sendemail"
                },
                {
                    "include": "#operators.sendemail"
                }
            ]
        },
        "arguments.sendemail": {
            "patterns": [
                {
                    "match": "(priority|paperorientation|maxinputs|sendcsv|papersize|use_tls|content_type|footer|message|maxtime|format|subject|use_ssl|server|sendresults|bcc|graceful|pdfview|inline|from|to|sendpdf|width_sort_columns|cc)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.sendemail": {
            "match": "\\b(html|normal|landscape|a3|highest|s|a2|plain|raw|csv|h|a5|letter|table|low|portrait|lowest|a4|high|legal|d|ledger|m)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.sendemail": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(CSV|RAW|A3|NORMAL|PORTRAIT|A4|HTML|LETTER|H|HIGHEST|LEGAL|PLAIN|TABLE|LANDSCAPE|LEDGER|LOWEST|S|A2|D|LOW|A5|HIGH|M)\\b"
        },
        "commands.setfields": {
            "begin": "(?<=\\[|\\|)\\s+(setfields)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.spath": {
            "begin": "(?<=\\[|\\|)\\s+(spath)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.spath"
                }
            ]
        },
        "arguments.spath": {
            "patterns": [
                {
                    "match": "(path|output|input)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.table": {
            "begin": "(?<=\\[|\\|)\\s+(table)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.transpose": {
            "begin": "(?<=\\[|\\|)\\s+(transpose)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.transpose"
                }
            ]
        },
        "arguments.transpose": {
            "patterns": [
                {
                    "match": "(column_name|header_field|include_empty)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.uniq": {
            "begin": "(?<=\\[|\\|)\\s+(uniq)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.metasearch": {
            "begin": "(?<=\\[|\\|)\\s+(metasearch)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.metasearch"
                },
                {
                    "include": "#operators.metasearch"
                }
            ]
        },
        "arguments.metasearch": {
            "patterns": [
                {
                    "match": "(latest|endhoursago|startmonthsago|endmonthsago|savedsearch|searchtimespanminutes|savedsplunk|starttimeu|starthoursago|hoursago|timeformat|_index_latest|enddaysago|monthsago|searchtimespanmonths|searchtimespanhours|earliest|daysago|minutesago|searchtimespandays|endtimeu|endminutesago|startminutesago|starttime|startdaysago|endtime|_index_earliest)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "operators.metasearch": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(IN)\\b"
        },
        "commands.search": {
            "begin": "(?<=\\[|\\|)\\s+(search)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.search"
                },
                {
                    "include": "#operators.search"
                }
            ]
        },
        "arguments.search": {
            "patterns": [
                {
                    "match": "(latest|endhoursago|startmonthsago|endmonthsago|savedsearch|searchtimespanminutes|savedsplunk|starttimeu|starthoursago|hoursago|timeformat|_index_latest|enddaysago|monthsago|searchtimespanmonths|searchtimespanhours|earliest|daysago|minutesago|searchtimespandays|endtimeu|endminutesago|startminutesago|starttime|startdaysago|endtime|_index_earliest)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "operators.search": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(IN)\\b"
        },
        "commands.set": {
            "begin": "(?<=\\[|\\|)\\s+(set)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.set"
                },
                {
                    "include": "#operators.set"
                }
            ]
        },
        "functions.set": {
            "match": "\\b(diff|union|intersect)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.set": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(DIFF|INTERSECT|UNION)\\b"
        },
        "commands.cluster": {
            "begin": "(?<=\\[|\\|)\\s+(cluster|slc)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.cluster"
                },
                {
                    "include": "#functions.cluster"
                },
                {
                    "include": "#operators.cluster"
                }
            ]
        },
        "arguments.cluster": {
            "patterns": [
                {
                    "match": "(countfield|labelfield|showcount|t|field|match|delims|labelonly)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.cluster": {
            "match": "\\b(termset|ngramset|termlist)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.cluster": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(TERMSET|TERMLIST|NGRAMSET)\\b"
        },
        "commands.shape": {
            "begin": "(?<=\\[|\\|)\\s+(shape)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.shape"
                }
            ]
        },
        "arguments.shape": {
            "patterns": [
                {
                    "match": "(maxresolution|maxvalues)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.showargs": {
            "begin": "(?<=\\[|\\|)\\s+(showargs)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.sort": {
            "begin": "(?<=\\[|\\|)\\s+(sort)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.sort"
                },
                {
                    "include": "#operators.sort"
                }
            ]
        },
        "functions.sort": {
            "match": "\\b(desc|str|ip|d|auto|num)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.sort": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(IP|NUM|STR|DESC|D|AUTO)\\b"
        },
        "commands.collect": {
            "begin": "(?<=\\[|\\|)\\s+(collect|stash|summaryindex|sumindex)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.collect"
                }
            ]
        },
        "arguments.collect": {
            "patterns": [
                {
                    "match": "(file|addtime|testmode|source|index|run_in_preview|marker|spool|host|sourcetype|uselb)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.mcatalog": {
            "begin": "(?<=\\[|\\|)\\s+(mcatalog)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.mcatalog"
                },
                {
                    "include": "#functions.mcatalog"
                },
                {
                    "include": "#operators.mcatalog"
                }
            ]
        },
        "arguments.mcatalog": {
            "patterns": [
                {
                    "match": "(latest|endhoursago|startmonthsago|endmonthsago|savedsearch|searchtimespanminutes|savedsplunk|starttimeu|starthoursago|hoursago|timeformat|_index_latest|append|enddaysago|monthsago|searchtimespanmonths|prestats|searchtimespanhours|earliest|daysago|minutesago|searchtimespandays|endtimeu|endminutesago|startminutesago|starttime|startdaysago|endtime|_index_earliest)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.mcatalog": {
            "match": "\\b(as|values)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.mcatalog": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(IN|AS|VALUES|WHERE|GROUPBY|BY)\\b"
        },
        "commands.mcollect": {
            "begin": "(?<=\\[|\\|)\\s+(mcollect)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.mcollect"
                }
            ]
        },
        "arguments.mcollect": {
            "patterns": [
                {
                    "match": "(sourcetype|file|prefix_field|index|host|spool|split|source)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.meventcollect": {
            "begin": "(?<=\\[|\\|)\\s+(meventcollect)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.meventcollect"
                }
            ]
        },
        "arguments.meventcollect": {
            "patterns": [
                {
                    "match": "(source|index|spool|host|prefix_field|sourcetype|split)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.mrollup": {
            "begin": "(?<=\\[|\\|)\\s+(mrollup)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.mrollup"
                },
                {
                    "include": "#functions.mrollup"
                },
                {
                    "include": "#operators.mrollup"
                }
            ]
        },
        "arguments.mrollup": {
            "patterns": [
                {
                    "match": "(type|span|file|target|overrides|source|aggregate|list)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.mrollup": {
            "match": "\\b(included|excluded|count|sum|avg|max|dimension|min|metric|median|perc|list)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.mrollup": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(EXCLUDED|COUNT|AVG|DIMENSION|MIN|INCLUDED|MAX|MEDIAN|METRIC|LIST|SUM|PERC)\\b"
        },
        "commands.streamstats": {
            "begin": "(?<=\\[|\\|)\\s+(streamstats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.streamstats"
                },
                {
                    "include": "#functions.streamstats"
                },
                {
                    "include": "#operators.streamstats"
                }
            ]
        },
        "arguments.streamstats": {
            "patterns": [
                {
                    "match": "(global|reset_after|reset_before|current|time_window|reset_on_change|allnum|window)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.streamstats": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|max|min|day|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|quarter|mvrange|mvmap|ceil|exactperc|week|upperperc|avg|exp|nullif|split|varp|hr|month|pi|ltrim|searchmatch|asin|hypot|year|stdevp|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|sec|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|sha512|as|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.streamstats": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|HYPOT|MVRANGE|SEARCHMATCH|SHA512|MIN|MVMAP|VALIDATE|URLDECODE|ACOS|LEN|TAN|DAY|ISNULL|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|C|MEAN|SHA1|ATAN|COALESCE|RTRIM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|MONTH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|SEC|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|ISBOOL|MVCOUNT|OR|FALSE|TYPEOF|EXACTPERC|SINH|STDEV|ISINT|MVJOIN|AS|ROUND|SIN|NOT|SPLIT|WEEK|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|HR|TOSTRING|YEAR|QUARTER)\\b"
        },
        "commands.eventstats": {
            "begin": "(?<=\\[|\\|)\\s+(eventstats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.eventstats"
                },
                {
                    "include": "#functions.eventstats"
                },
                {
                    "include": "#operators.eventstats"
                }
            ]
        },
        "arguments.eventstats": {
            "patterns": [
                {
                    "match": "(allnum)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.eventstats": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|max|min|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|mvrange|mvmap|ceil|exactperc|upperperc|avg|exp|nullif|split|varp|pi|ltrim|searchmatch|asin|hypot|stdevp|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|sha512|as|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.eventstats": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|HYPOT|MVRANGE|SEARCHMATCH|SHA512|MVMAP|VALIDATE|MIN|URLDECODE|ACOS|LEN|TAN|ISNULL|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|C|MEAN|SHA1|ATAN|COALESCE|RTRIM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|ISBOOL|MVCOUNT|OR|FALSE|TYPEOF|EXACTPERC|SINH|STDEV|ISINT|MVJOIN|AS|ROUND|SIN|NOT|SPLIT|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|TOSTRING)\\b"
        },
        "commands.stats": {
            "begin": "(?<=\\[|\\|)\\s+(stats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.stats"
                },
                {
                    "include": "#functions.stats"
                },
                {
                    "include": "#operators.stats"
                }
            ]
        },
        "arguments.stats": {
            "patterns": [
                {
                    "match": "(partitions|allnum|delim|dedup_splitvals)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.stats": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|max|min|day|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|quarter|mvrange|mvmap|ceil|exactperc|week|upperperc|avg|exp|nullif|split|hr|varp|month|pi|ltrim|searchmatch|asin|hypot|sum|year|stdevp|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|sec|strftime|len|sqrt|sparkline|typeof|coalesce|ifnull|isbool|sumsq|commands|cidrmatch|case|ceiling|sha512|as|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|range|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.stats": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|HYPOT|MVRANGE|SEARCHMATCH|SHA512|MIN|MVMAP|VALIDATE|URLDECODE|ACOS|LEN|RANGE|DAY|TAN|ISNULL|SPARKLINE|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|MEAN|C|AND|SHA1|SUMSQ|ATAN|COALESCE|RTRIM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|SUM|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|MONTH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|SEC|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|ISBOOL|MVCOUNT|OR|FALSE|TYPEOF|EXACTPERC|SINH|STDEV|ISINT|MVJOIN|AS|ROUND|SIN|NOT|SPLIT|WEEK|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|HR|TOSTRING|YEAR|QUARTER)\\b"
        },
        "commands.strcat": {
            "begin": "(?<=\\[|\\|)\\s+(strcat)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.strcat"
                }
            ]
        },
        "arguments.strcat": {
            "patterns": [
                {
                    "match": "(allrequired)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.streamedcsv": {
            "begin": "(?<=\\[|\\|)\\s+(streamedcsv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.streamedcsv"
                }
            ]
        },
        "arguments.streamedcsv": {
            "patterns": [
                {
                    "match": "(chunk)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.sistats": {
            "begin": "(?<=\\[|\\|)\\s+(sistats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.sistats"
                },
                {
                    "include": "#functions.sistats"
                },
                {
                    "include": "#operators.sistats"
                }
            ]
        },
        "arguments.sistats": {
            "patterns": [
                {
                    "match": "(partitions|allnum|delim|dedup_splitvals)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.sistats": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|max|min|day|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|quarter|mvrange|mvmap|ceil|exactperc|week|upperperc|avg|exp|nullif|split|hr|varp|month|pi|ltrim|searchmatch|asin|hypot|sum|year|stdevp|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|sec|strftime|len|sqrt|sparkline|typeof|coalesce|ifnull|isbool|sumsq|commands|cidrmatch|case|ceiling|sha512|as|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|range|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.sistats": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|HYPOT|MVRANGE|SEARCHMATCH|SHA512|MIN|MVMAP|VALIDATE|URLDECODE|ACOS|LEN|RANGE|DAY|TAN|ISNULL|SPARKLINE|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|MEAN|C|AND|SHA1|SUMSQ|ATAN|COALESCE|RTRIM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|SUM|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|MONTH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|SEC|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|ISBOOL|MVCOUNT|OR|FALSE|TYPEOF|EXACTPERC|SINH|STDEV|ISINT|MVJOIN|AS|ROUND|SIN|NOT|SPLIT|WEEK|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|HR|TOSTRING|YEAR|QUARTER)\\b"
        },
        "commands.sitop": {
            "begin": "(?<=\\[|\\|)\\s+(sitop)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.sitop"
                }
            ]
        },
        "arguments.sitop": {
            "patterns": [
                {
                    "match": "(countfield|showcount|otherstr|showperc|percentfield|limit|useother)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.sirare": {
            "begin": "(?<=\\[|\\|)\\s+(sirare)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.sirare"
                }
            ]
        },
        "arguments.sirare": {
            "patterns": [
                {
                    "match": "(countfield|showcount|otherstr|showperc|percentfield|limit|useother)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.sichart": {
            "begin": "(?<=\\[|\\|)\\s+(sichart)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.sichart"
                },
                {
                    "include": "#functions.sichart"
                },
                {
                    "include": "#operators.sichart"
                }
            ]
        },
        "arguments.sichart": {
            "patterns": [
                {
                    "match": "(sep|format|dedup_splitvals|nullstr|cont|limit|useother|aligntime|end|usenull|otherstr|start|agg|bins|span|minspan)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.sichart": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|notin|max|min|day|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|quarter|mvrange|mvmap|ceil|exactperc|week|upperperc|avg|exp|nullif|split|hr|varp|top|month|pi|ltrim|searchmatch|asin|hypot|bottom|sum|earliest|year|stdevp|null|sinh|false|acos|latest|ln|rtrim|mvfilter|like|md5|sec|strftime|len|sqrt|sparkline|typeof|coalesce|ifnull|isbool|sumsq|commands|cidrmatch|case|ceiling|sha512|as|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|in|range|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.sichart": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|EARLIEST|MVRANGE|HYPOT|SEARCHMATCH|SHA512|MIN|MVMAP|VALIDATE|URLDECODE|IN|ACOS|LEN|RANGE|DAY|TAN|ISNULL|SPARKLINE|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|MEAN|C|AND|SHA1|SUMSQ|ATAN|COALESCE|RTRIM|BY|BOTTOM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|LATEST|ABS|SUM|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|MONTH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|SEC|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|ISBOOL|MVCOUNT|OVER|OR|FALSE|TYPEOF|EXACTPERC|SINH|STDEV|TOP|ISINT|MVJOIN|AS|ROUND|SIN|NOTIN|NOT|SPLIT|WEEK|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|HR|TOSTRING|YEAR|QUARTER)\\b"
        },
        "commands.sitimechart": {
            "begin": "(?<=\\[|\\|)\\s+(sitimechart)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.sitimechart"
                },
                {
                    "include": "#functions.sitimechart"
                },
                {
                    "include": "#operators.sitimechart"
                }
            ]
        },
        "arguments.sitimechart": {
            "patterns": [
                {
                    "match": "(sep|format|partial|dedup_splitvals|nullstr|cont|limit|useother|aligntime|end|usenull|otherstr|start|fixedrange|bins|span|minspan)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.sitimechart": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|notin|max|min|day|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|quarter|mvrange|mvmap|ceil|exactperc|week|upperperc|avg|exp|per_hour|nullif|split|varp|hr|bottom|top|month|pi|ltrim|per_day|searchmatch|asin|hypot|earliest|year|stdevp|null|sinh|false|acos|latest|ln|rtrim|mvfilter|like|md5|sec|per_second|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|per_minute|as|sha512|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|by|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|in|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.sitimechart": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|EARLIEST|PER_DAY|MVRANGE|HYPOT|SEARCHMATCH|SHA512|MIN|MVMAP|VALIDATE|URLDECODE|IN|ACOS|LEN|TAN|DAY|ISNULL|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|C|MEAN|SHA1|PER_HOUR|ATAN|COALESCE|RTRIM|BY|BOTTOM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|LATEST|ABS|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|MONTH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|SEC|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|PER_SECOND|ISBOOL|MVCOUNT|OR|PER_MINUTE|TYPEOF|FALSE|EXACTPERC|SINH|STDEV|TOP|ISINT|MVJOIN|AS|ROUND|SIN|NOTIN|NOT|SPLIT|WEEK|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|HR|TOSTRING|YEAR|QUARTER)\\b"
        },
        "commands.tags": {
            "begin": "(?<=\\[|\\|)\\s+(tags)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.tags"
                }
            ]
        },
        "arguments.tags": {
            "patterns": [
                {
                    "match": "(outputfield|inclvalue|inclname)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.tagcreate": {
            "begin": "(?<=\\[|\\|)\\s+(tagcreate)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.tagdelete": {
            "begin": "(?<=\\[|\\|)\\s+(tagdelete)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.tagset": {
            "begin": "(?<=\\[|\\|)\\s+(tagset)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.trendline": {
            "begin": "(?<=\\[|\\|)\\s+(trendline)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.trendline"
                },
                {
                    "include": "#operators.trendline"
                }
            ]
        },
        "functions.trendline": {
            "match": "\\b(wma|as|sma|ema)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.trendline": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SMA|AS|WMA|EMA)\\b"
        },
        "commands.timechart": {
            "begin": "(?<=\\[|\\|)\\s+(timechart)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.timechart"
                },
                {
                    "include": "#functions.timechart"
                },
                {
                    "include": "#operators.timechart"
                }
            ]
        },
        "arguments.timechart": {
            "patterns": [
                {
                    "match": "(sep|format|partial|dedup_splitvals|nullstr|cont|limit|useother|aligntime|end|usenull|otherstr|start|fixedrange|bins|span|minspan)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.timechart": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|dc|notin|max|min|day|relative_time|validate|random|stdev|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|c|log|abs|mean|tanh|sin|sigfig|p|quarter|mvrange|mvmap|ceil|exactperc|week|upperperc|avg|exp|per_hour|nullif|split|varp|hr|bottom|top|month|pi|ltrim|per_day|searchmatch|asin|hypot|earliest|year|stdevp|null|sinh|false|acos|latest|ln|rtrim|mvfilter|like|md5|sec|per_second|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|per_minute|as|sha512|atan|match|isstr|urldecode|distinct_count|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|by|trim|tostring|var|exact|count|true|asinh|mvdedup|round|spath|strptime|isnum|perc|isnull|now|in|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.timechart": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|XOR|ASINH|EARLIEST|PER_DAY|MVRANGE|HYPOT|SEARCHMATCH|SHA512|MIN|MVMAP|VALIDATE|URLDECODE|IN|ACOS|LEN|TAN|DAY|ISNULL|MVFILTER|VARP|DISTINCT_COUNT|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|C|MEAN|SHA1|PER_HOUR|ATAN|COALESCE|RTRIM|BY|BOTTOM|PERC|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|LATEST|ABS|COMMANDS|P|NULL|CASE|UPPERPERC|COUNT|AVG|IF|ACOSH|MONTH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|SEC|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|DC|NOW|MVAPPEND|PER_SECOND|ISBOOL|MVCOUNT|OR|PER_MINUTE|TYPEOF|FALSE|EXACTPERC|SINH|STDEV|TOP|ISINT|MVJOIN|AS|ROUND|SIN|NOTIN|NOT|SPLIT|WEEK|MAX|VAR|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|STDEVP|MVSORT|TANH|ATAN2|LTRIM|HR|TOSTRING|YEAR|QUARTER)\\b"
        },
        "commands.timewrap": {
            "begin": "(?<=\\[|\\|)\\s+(timewrap)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.timewrap"
                },
                {
                    "include": "#functions.timewrap"
                },
                {
                    "include": "#operators.timewrap"
                }
            ]
        },
        "arguments.timewrap": {
            "patterns": [
                {
                    "match": "(time_format|series|align)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.timewrap": {
            "match": "\\b(week|exact|short|year|sec|min|relative|day|hr|end|quarter|now|month)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.timewrap": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(RELATIVE|SEC|SHORT|END|MIN|WEEK|EXACT|HR|MONTH|DAY|NOW|YEAR|QUARTER)\\b"
        },
        "commands.top": {
            "begin": "(?<=\\[|\\|)\\s+(top|common)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.top"
                }
            ]
        },
        "arguments.top": {
            "patterns": [
                {
                    "match": "(countfield|showcount|otherstr|showperc|percentfield|limit|useother)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.tscollect": {
            "begin": "(?<=\\[|\\|)\\s+(tscollect)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.tscollect"
                }
            ]
        },
        "arguments.tscollect": {
            "patterns": [
                {
                    "match": "(keepresults|squashcase|namespace)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.mstats": {
            "begin": "(?<=\\[|\\|)\\s+(mstats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.mstats"
                },
                {
                    "include": "#functions.mstats"
                },
                {
                    "include": "#operators.mstats"
                }
            ]
        },
        "arguments.mstats": {
            "patterns": [
                {
                    "match": "(endhoursago|startmonthsago|latest|endmonthsago|savedsearch|searchtimespanminutes|update_period|starttimeu|starthoursago|backfill|hoursago|fillnull_value|timeformat|starttime|span|_index_latest|append|enddaysago|daysago|searchtimespanmonths|earliest|searchtimespanhours|prestats|monthsago|minutesago|searchtimespandays|endtimeu|endminutesago|startminutesago|savedsplunk|startdaysago|endtime|_index_earliest)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.mstats": {
            "match": "\\b(exactperc|upperperc|var|avg|count|dc|as|c|mean|stdevp|p|perc|stdev|distinct_count|varp)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.mstats": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS|IN|VAR|WHERE|GROUPBY|DC|P|VARP|DISTINCT_COUNT|UPPERPERC|COUNT|STDEVP|AVG|MEAN|C|EXACTPERC|STDEV|BY|PERC)\\b"
        },
        "commands.tstats": {
            "begin": "(?<=\\[|\\|)\\s+(tstats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.tstats"
                },
                {
                    "include": "#functions.tstats"
                },
                {
                    "include": "#operators.tstats"
                }
            ]
        },
        "arguments.tstats": {
            "patterns": [
                {
                    "match": "(latest|endmonthsago|savedsearch|searchtimespanminutes|starttimeu|summariesonly|datamodel|hoursago|fillnull_value|local|append|allow_old_summaries|enddaysago|monthsago|searchtimespanmonths|searchtimespanhours|minutesago|endtimeu|endminutesago|starttime|include_reduced_buckets|startdaysago|sid|endtime|endhoursago|startmonthsago|starthoursago|timeformat|span|_index_latest|daysago|earliest|prestats|chunk_size|searchtimespandays|startminutesago|savedsplunk|_index_earliest)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.tstats": {
            "match": "\\b(exactperc|upperperc|var|avg|count|dc|as|c|mean|stdevp|p|perc|stdev|distinct_count|varp|by)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.tstats": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(FROM|AS|IN|VAR|WHERE|GROUPBY|DC|P|VARP|DISTINCT_COUNT|UPPERPERC|COUNT|STDEVP|AVG|MEAN|C|PREFIX|EXACTPERC|STDEV|BY|PERC)\\b"
        },
        "commands.transaction": {
            "begin": "(?<=\\[|\\|)\\s+(transaction|transam)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.transaction"
                },
                {
                    "include": "#functions.transaction"
                },
                {
                    "include": "#operators.transaction"
                }
            ]
        },
        "arguments.transaction": {
            "patterns": [
                {
                    "match": "(latest|endmonthsago|savedsearch|searchtimespanminutes|nullstr|name|starttimeu|maxopentxn|keeporphans|maxopenevents|hoursago|enddaysago|monthsago|searchtimespanmonths|searchtimespanhours|delim|minutesago|keepevicted|connected|endtimeu|endminutesago|starttime|startdaysago|endtime|endswith|endhoursago|startmonthsago|maxevents|starthoursago|maxpause|timeformat|_index_latest|maxspan|mvraw|daysago|earliest|startswith|searchtimespandays|mvlist|unifyends|startminutesago|savedsplunk|_index_earliest)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.transaction": {
            "match": "\\b(s|d|m|h)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.transaction": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(S|IN|D|H|M)\\b"
        },
        "commands.typeahead": {
            "begin": "(?<=\\[|\\|)\\s+(typeahead)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.typeahead"
                }
            ]
        },
        "arguments.typeahead": {
            "patterns": [
                {
                    "match": "(index|max_time|endtimeu|count|starttimeu|collapse|prefix)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.typelearner": {
            "begin": "(?<=\\[|\\|)\\s+(typelearner)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.typelearner"
                }
            ]
        },
        "arguments.typelearner": {
            "patterns": [
                {
                    "match": "(maxlen)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.typer": {
            "begin": "(?<=\\[|\\|)\\s+(typer)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.where": {
            "begin": "(?<=\\[|\\|)\\s+(where)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.where"
                },
                {
                    "include": "#operators.where"
                }
            ]
        },
        "functions.where": {
            "match": "\\b(if|atanh|isnotnull|mvsort|floor|max|min|relative_time|validate|random|pow|lower|cosh|tonumber|isint|mvfind|cos|mvzip|mvjoin|mvindex|acosh|replace|log|abs|tanh|sin|sigfig|mvrange|mvmap|ceil|exp|nullif|split|pi|ltrim|searchmatch|asin|hypot|null|sinh|false|acos|ln|rtrim|mvfilter|like|md5|strftime|len|sqrt|typeof|coalesce|ifnull|isbool|commands|cidrmatch|case|ceiling|sha512|atan|match|isstr|urldecode|tan|substr|upper|mvappend|sha1|atan2|time|mvcount|trim|tostring|exact|true|asinh|mvdedup|round|spath|strptime|isnum|isnull|now|sha256)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.where": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(STRFTIME|ASINH|HYPOT|XOR|MVRANGE|SEARCHMATCH|SHA512|MVMAP|VALIDATE|MIN|URLDECODE|ACOS|LEN|TAN|ISNULL|MVFILTER|PI|MVFIND|TRIM|SPATH|RELATIVE_TIME|COSH|IFNULL|AND|SHA1|ATAN|COALESCE|RTRIM|UPPER|MVZIP|TIME|LOG|ASIN|SHA256|MD5|MVDEDUP|ISNUM|EXP|ATANH|EXACT|SUBSTR|ABS|COMMANDS|NULL|CASE|IF|ACOSH|LN|LOWER|MATCH|LIKE|ISNOTNULL|TRUE|STRPTIME|POW|NULLIF|REPLACE|TONUMBER|CIDRMATCH|NOW|MVAPPEND|ISBOOL|MVCOUNT|FALSE|OR|TYPEOF|SINH|ISINT|MVJOIN|ROUND|SIN|NOT|SPLIT|MAX|FLOOR|CEILING|CEIL|ISSTR|SQRT|RANDOM|SIGFIG|MVINDEX|COS|MVSORT|TANH|ATAN2|LTRIM|TOSTRING)\\b"
        },
        "commands.highlight": {
            "begin": "(?<=\\[|\\|)\\s+(highlight|hilite)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.xyseries": {
            "begin": "(?<=\\[|\\|)\\s+(xyseries|maketable)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.xyseries"
                }
            ]
        },
        "arguments.xyseries": {
            "patterns": [
                {
                    "match": "(sep|format|grouped)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.untable": {
            "begin": "(?<=\\[|\\|)\\s+(untable)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.rest": {
            "begin": "(?<=\\[|\\|)\\s+(rest)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.rest"
                }
            ]
        },
        "arguments.rest": {
            "patterns": [
                {
                    "match": "(timeout|splunk_server_group|count|splunk_server)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.surrounding": {
            "begin": "(?<=\\[|\\|)\\s+(surrounding)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.surrounding"
                },
                {
                    "include": "#operators.surrounding"
                }
            ]
        },
        "arguments.surrounding": {
            "patterns": [
                {
                    "match": "(id|timebefore|searchkeys|timeafter|readlevel)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "operators.surrounding": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(1|3|0|2)\\b"
        },
        "commands.xmlkv": {
            "begin": "(?<=\\[|\\|)\\s+(xmlkv)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.xmlkv"
                }
            ]
        },
        "arguments.xmlkv": {
            "patterns": [
                {
                    "match": "(maxinputs)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.xmlunescape": {
            "begin": "(?<=\\[|\\|)\\s+(xmlunescape)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.xmlunescape"
                }
            ]
        },
        "arguments.xmlunescape": {
            "patterns": [
                {
                    "match": "(maxinputs)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.xpath": {
            "begin": "(?<=\\[|\\|)\\s+(xpath)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.xpath"
                }
            ]
        },
        "arguments.xpath": {
            "patterns": [
                {
                    "match": "(outfield|field|default)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.iplocation": {
            "begin": "(?<=\\[|\\|)\\s+(iplocation)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.iplocation"
                }
            ]
        },
        "arguments.iplocation": {
            "patterns": [
                {
                    "match": "(prefix|lang|allfields)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.rangemap": {
            "begin": "(?<=\\[|\\|)\\s+(rangemap)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.rangemap"
                }
            ]
        },
        "arguments.rangemap": {
            "patterns": [
                {
                    "match": "(field|default)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.rawstats": {
            "begin": "(?<=\\[|\\|)\\s+(rawstats)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.reltime": {
            "begin": "(?<=\\[|\\|)\\s+(reltime)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.scrub": {
            "begin": "(?<=\\[|\\|)\\s+(scrub)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.scrub"
                },
                {
                    "include": "#functions.scrub"
                },
                {
                    "include": "#operators.scrub"
                }
            ]
        },
        "arguments.scrub": {
            "patterns": [
                {
                    "match": "(terms|timeconfig|dictionary|namespace)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.scrub": {
            "match": "\\b(public|name|private)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.scrub": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(PUBLIC|NAME|PRIVATE)\\b"
        },
        "commands.metadata": {
            "begin": "(?<=\\[|\\|)\\s+(metadata)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.metadata"
                },
                {
                    "include": "#functions.metadata"
                },
                {
                    "include": "#operators.metadata"
                }
            ]
        },
        "arguments.metadata": {
            "patterns": [
                {
                    "match": "(index|splunk_server_group|datatype|type|splunk_server)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.metadata": {
            "match": "\\b(hosts|sources|sourcetypes)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.metadata": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(SOURCETYPES|SOURCES|HOSTS)\\b"
        },
        "commands.eventcount": {
            "begin": "(?<=\\[|\\|)\\s+(eventcount)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.eventcount"
                }
            ]
        },
        "arguments.eventcount": {
            "patterns": [
                {
                    "match": "(summarize|index|report_size|list_vix)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.findtypes": {
            "begin": "(?<=\\[|\\|)\\s+(findtypes)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.findtypes"
                }
            ]
        },
        "arguments.findtypes": {
            "patterns": [
                {
                    "match": "(useraw|notcovered|max)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.return": {
            "begin": "(?<=\\[|\\|)\\s+(return)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.runshellscript": {
            "begin": "(?<=\\[|\\|)\\s+(runshellscript)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.searchtxn": {
            "begin": "(?<=\\[|\\|)\\s+(searchtxn)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.searchtxn"
                }
            ]
        },
        "arguments.searchtxn": {
            "patterns": [
                {
                    "match": "(eventsonly|max_terms|use_disjunct)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.walklex": {
            "begin": "(?<=\\[|\\|)\\s+(walklex)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.walklex"
                },
                {
                    "include": "#functions.walklex"
                },
                {
                    "include": "#operators.walklex"
                }
            ]
        },
        "arguments.walklex": {
            "patterns": [
                {
                    "match": "(index|splunk_server_group|type|pattern|splunk_server|prefix)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.walklex": {
            "match": "\\b(all|field|term|fieldvalue)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.walklex": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(FIELD|FIELDVALUE|TERM|ALL)\\b"
        },
        "commands.msearch": {
            "begin": "(?<=\\[|\\|)\\s+(msearch)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.msearch"
                }
            ]
        },
        "arguments.msearch": {
            "patterns": [
                {
                    "match": "(latest|index|splunk_server_group|earliest|filter|splunk_server)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "commands.x11": {
            "begin": "(?<=\\[|\\|)\\s+(x11)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#functions.x11"
                },
                {
                    "include": "#operators.x11"
                }
            ]
        },
        "functions.x11": {
            "match": "\\b(add|as|mult)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.x11": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(AS|ADD|MULT)\\b"
        },
        "commands.union": {
            "begin": "(?<=\\[|\\|)\\s+(union)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": [
                {
                    "include": "#arguments.union"
                },
                {
                    "include": "#functions.union"
                },
                {
                    "include": "#operators.union"
                }
            ]
        },
        "arguments.union": {
            "patterns": [
                {
                    "match": "(maxout|extendtimerange|timeout|maxtime)=(?:.+?)(?:\\s|$)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.spl"
                        }
                    }
                }
            ]
        },
        "functions.union": {
            "match": "\\b(datamodel|federated|inputlookup|savedsearch)(\\()",
            "captures": {
                "1": {
                    "name": "support.function.spl"
                }
            }
        },
        "operators.union": {
            "name": "keyword.operator.word.spl",
            "match": "\\b(FEDERATED|INPUTLOOKUP|DATAMODEL|SAVEDSEARCH)\\b"
        },
        "commands.dfsjob": {
            "begin": "(?<=\\[|\\|)\\s+(dfsjob)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        },
        "commands.jsontxn": {
            "begin": "(?<=\\[|\\|)\\s+(jsontxn)\\b",
            "end": "(?<=\\]|\\|)",
            "captures": {
                "1": {
                    "name": "support.class.spl"
                }
            },
            "patterns": []
        }
    },
    "scopeName": "source.spl"
}